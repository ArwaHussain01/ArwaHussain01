Problem Statement
Sample Input 1:
4
10 2 3 11
Sample Output 1:
21
Explanation Of Sample Input 1:
Since the thief cant loot two consecutive houses, the ways in which he may loot are:

1. [10, 3]: a total loot of 13
2. [10, 11]: a total loot of 21
3. [2, 11]: a total loot of 13
4. [10]: a total loot of 10
5. [2]: a total loot of 2
6. [3]: a total loot of 3
7. [11]: a total loot of 11

We can't neglect the option to loot just either of the houses if it yields the maximum loot.

From all the possible seven ways, the second option yields the maximum loot amount and hence the answer.







int func(vector<int> &A, int low, int high)
{ 
    int prev2 = 0, prev1 = A[low];
    for(int i=low + 1; i <= high; i++)
    {
        int pick = A[i];
        if(i > 1) pick += prev2;
        int notPick = 0 + prev1;

        int curr_i = max(pick, notPick);
        prev2 = prev1;
        prev1 = curr_i;
    }
    return prev1;
}
