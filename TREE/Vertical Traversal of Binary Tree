Vertical Traversal of Binary Tree
Given a Binary Tree, find the vertical traversal of it starting from the leftmost level to the rightmost level.
If there are multiple nodes passing through a vertical line, then they should be printed as they appear in level order traversal of the tree.

Example 1:

Input:
           1
         /   \
       2       3
     /   \   /   \
   4      5 6      7
              \      \
               8      9           
Output: 
4 2 1 5 6 3 8 7 9 

//Your code here
        queue<pair<Node*,pair<int,int>>>q;
        map<int,map<int,vector<int>>>nodes;
           if(root==NULL)

            return {};
        q.push({root,{0,0}});
        while(!q.empty())
        {
            auto it=q.front();
            q.pop();
            int ver=it.second.first;
            int lev=it.second.second;
            Node* node=it.first;
            nodes[ver][lev].push_back(node->data);
            if(node->left)
            q.push({node->left,{ver-1,lev+1}});
            if(node->right)
            q.push({node->right,{ver+1,lev+1}});
            
        }
        
        
        vector<int>ans;
        for(auto x:nodes)
        {
            vector<int>col;
            for(auto c:x.second)
            {
                 for(auto k:c.second)
            ans.push_back(k);
            }
           
            
        }
        
        return ans;
