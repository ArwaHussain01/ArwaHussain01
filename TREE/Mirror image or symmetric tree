Symmetric Tree
Given a Binary Tree. Check whether it is Symmetric or not, i.e. whether the binary tree is a Mirror image of itself or not.

Example 1:

Input:
         5
       /   \
      1     1
     /       \
    2         2
Output: True
Explanation: Tree is mirror image of
itself i.e. tree is symmetric

class Solution{
    public:
    // return true/false denoting whether the tree is Symmetric or not
    bool isSymmetric(struct Node* root)
    {
	    return root==NULL ||  isSymmetricHelp(root->left,root->right);
    }
    bool isSymmetricHelp(Node *left,Node *right)
    {
        if(left==NULL || right==NULL)
        {
            return (left==right);
        }
        
        if(left->data!=right->data) return false;
        
        return isSymmetricHelp(left->left,right->right) && isSymmetricHelp(left->right,right->left);
    }
};
