Given below is a binary tree. The task is to print the top view of binary tree. Top view of a binary tree is the set of nodes visible when the tree is viewed from the top. For the given below tree

       1
    /     \
   2       3
  /  \    /   \
4    5  6   7

Top view will be: 4 2 1 3 7
Note: Return nodes from leftmost node to rightmost node.

class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    vector<int> topView(Node *root)
    {
       vector<int>ans;
       
       map<int,int>mpp;
       
       queue<pair<Node*,int>> q;
       
       q.push({root,0});
       
       while(!q.empty())
       {
           auto it=q.front();
           q.pop();
           Node* node=it.first;
           int line=it.second;
           
           if(mpp.find(line)==mpp.end()) mpp[line]=node->data;
           
           if(node->left)
           {
               q.push({node->left,line-1});
           }
           if(node->right)
           {
               q.push({node->right,line+1});
           }
       }
       for(auto it:mpp)
       {
           ans.push_back(it.second);
       }
       return ans;
    }

};
