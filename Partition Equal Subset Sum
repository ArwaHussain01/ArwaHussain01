bool canPartition(vector<int> &arr, int n)
{
    int sum=0;
    
    for(int i=0;i<n;i++)
    {
    sum+=arr[i];
    }
    if(sum%2!=0) return false;
    else
    {
    int target=sum/2;
	vector<vector<bool>> dp(n,vector<bool>(target+1,false));
    
    for(int i=0;i<n;i++) dp[i][0]=true;
    
    if(arr[0]<=target) dp[0][arr[0]]=true;
    
    for(int i=1;i<n;i++)
    {
    for(int k=1;k<=target;k++)
    {
    
    bool nottake=dp[i-1][k];
    bool take=false;
        
    if(arr[i]<=k)
    {
    take=dp[i-1][k-arr[i]];
    }
    dp[i][k]=take || nottake;
    }
    }
    return dp[n-1][target];
}
}
