Problem Statement
Sample Input 1 :
2
4
2 
3 4
6 5 7
4 1 8 3
1
-10 
Sample Output 1 :
11
-10
Sample Input Explanation:
Test case 1:
Here our triangle array is:

2
3 4
6 5 7 
4 1 8 3

In this array, the minimum path will be 2->3->5->1, so the minimum sum path would be 2+3+5+1=11

Test case 2:
In this case, there is one row. Thus, the minimum path will be -10, and the minimum sum path=-10.
Sample Input 2 :
2
4
1
2 3
4 5 6
7 8 9 10
3
5
-1 3
22 1 -9
Sample Output 2 :
14
-1



#include <bits/stdc++.h> 
int minimumPathSum(vector<vector<int>>& triangle, int n){
	int dp[n][n];
    for(int j=0;j<n;j++)
    {
     dp[n-1][j]=triangle[n-1][j];
    }
    for(int i=n-2;i>=0;i--)
    {
    for(int j=i;j>=0;j--)
    {
    int down=triangle[i][j]+dp[i+1][j];
    int dia=triangle[i][j]+dp[i+1][j+1];
    dp[i][j]=min(down,dia);
    }
    }
    return dp[0][0];
}
